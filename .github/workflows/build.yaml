name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: nixbuild/nix-quick-install-action@v30
      with:
        nix_conf: |
          max-jobs = 16
    - uses: nix-community/cache-nix-action@v6
      with:
        # restore and save a cache using this key
        primary-key: nix-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock', 'OS-image') }}
        # if there's no cache hit, restore a cache by this prefix
        restore-prefixes-first-match: nix-${{ runner.os }}-
        # do purge caches
        purge: true
        # purge all versions of the cache
        purge-prefixes: nix-${{ runner.os }}-
        # created more than this number of seconds ago relative to the start of the `Post Restore` phase
        purge-created: 0
        # except the version with the `primary-key`, if it exists
        purge-primary-key: never
    - name: Build
      run: |
        nix build -Lv .#OSStage4Image
        nix fmt -- -c .
    - name: Prepare cache
      run: |
        nix store gc
